"""Wrapper to the POSIX crypt library call and associated functionality."""

import sys

if sys.platform != "win32":
    class _Method:
        """
        Class representing a salt method per the Modular Crypt Format or the
        legacy 2-character crypt method.
        """
        ...
    METHOD_CRYPT: _Method
    METHOD_MD5: _Method
    METHOD_SHA256: _Method
    METHOD_SHA512: _Method
    METHOD_BLOWFISH: _Method
    methods: list[_Method]
    def mksalt(method: _Method | None = None, *, rounds: int | None = None) -> str:
        """
        Generate a salt for the specified method.

        If not specified, the strongest available method will be used.
        """
        ...
    def crypt(word: str, salt: str | _Method | None = None) -> str:
        """
        Return a string representing the one-way hash of a password, with a salt
        prepended.

        If ``salt`` is not specified or is ``None``, the strongest
        available method will be selected and a salt generated.  Otherwise,
        ``salt`` may be one of the ``crypt.METHOD_*`` values, or a string as
        returned by ``crypt.mksalt()``.
        """
        ...
